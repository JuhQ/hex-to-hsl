{"version":3,"sources":["hexToHsl.js"],"names":[],"mappings":";;;;AAAA;;;;AACA;;;;;;AAEA,mBAAK,gBAAL,EAAuB,aAAK;;;;AAC3B,GAAE,SAAF,uBAAY,qBAAS,SAAT;;;;GAAZ,0BAAiC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;;;;GAAjC,EAD2B;CAAL,CAAvB;AAGA,mBAAK,gBAAL,EAAuB,aAAK;;;;AAC3B,GAAE,SAAF,yBAAY,qBAAS,SAAT;;;;GAAZ,0BAAiC,CAAC,CAAD,EAAI,CAAJ,EAAO,GAAP;;;;GAAjC,EAD2B;CAAL,CAAvB;AAGA,mBAAK,eAAL,EAAsB,aAAK;;;;AAC1B,GAAE,SAAF,yBAAY,qBAAS,SAAT;;;;GAAZ,0BAAiC,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP;;;;GAAjC,EAD0B;CAAL,CAAtB;AAGA,mBAAK,0BAAL,EAAiC,aAAK;;;;AACrC,GAAE,SAAF,yBAAY,qBAAS,SAAT;;;;GAAZ,0BAAiC,CAAC,CAAD,EAAI,CAAJ,EAAO,GAAP;;;;GAAjC,EADqC;CAAL,CAAjC;AAGA,mBAAK,yBAAL,EAAgC,aAAK;;;;AACpC,GAAE,SAAF,yBAAY,qBAAS,SAAT;;;;GAAZ,4BAAiC,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP;;;;GAAjC,EADoC;CAAL,CAAhC;;AAIA,mBAAK,0BAAL,EAAiC,aAAK;;;;AACrC,GAAE,SAAF,2BAAY,qBAAS,MAAT;;;;GAAZ,4BAA8B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;;;;GAA9B,EADqC;CAAL,CAAjC;AAGA,mBAAK,0BAAL,EAAiC,aAAK;;;;AACrC,GAAE,SAAF,2BAAY,qBAAS,MAAT;;;;GAAZ,4BAA8B,CAAC,CAAD,EAAI,CAAJ,EAAO,GAAP;;;;GAA9B,EADqC;CAAL,CAAjC;AAGA,mBAAK,yBAAL,EAAgC,aAAK;;;;AACpC,GAAE,SAAF,2BAAY,qBAAS,MAAT;;;;GAAZ,4BAA8B,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP;;;;GAA9B,EADoC;CAAL,CAAhC;AAGA,mBAAK,oCAAL,EAA2C,aAAK;;;;AAC/C,GAAE,SAAF,2BAAY,qBAAS,MAAT;;;;GAAZ,4BAA8B,CAAC,CAAD,EAAI,CAAJ,EAAO,GAAP;;;;GAA9B,EAD+C;CAAL,CAA3C;AAGA,mBAAK,mCAAL,EAA0C,aAAK;;;;AAC9C,GAAE,SAAF,2BAAY,qBAAS,MAAT;;;;GAAZ,4BAA8B,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP;;;;GAA9B,EAD8C;CAAL,CAA1C","file":"hexToHsl.js","sourcesContent":["import test from 'ava';\nimport hexToHsl from '../index';\n\ntest('converts black', t => {\n\tt.deepEqual(hexToHsl('#000000'), [0, 0, 0]);\n});\ntest('converts white', t => {\n\tt.deepEqual(hexToHsl('#ffffff'), [0, 0, 100]);\n});\ntest('converts grey', t => {\n\tt.deepEqual(hexToHsl('#AAAAAA'), [0, 0, 67]);\n});\ntest('converts white uppercase', t => {\n\tt.deepEqual(hexToHsl('#FFFFFF'), [0, 0, 100]);\n});\ntest('converts grey uppercase', t => {\n\tt.deepEqual(hexToHsl('#aaaaaa'), [0, 0, 67]);\n});\n\ntest('converts black shorthand', t => {\n\tt.deepEqual(hexToHsl('#000'), [0, 0, 0]);\n});\ntest('converts white shorthand', t => {\n\tt.deepEqual(hexToHsl('#fff'), [0, 0, 100]);\n});\ntest('converts grey shorthand', t => {\n\tt.deepEqual(hexToHsl('#aaa'), [0, 0, 67]);\n});\ntest('converts white shorthand uppercase', t => {\n\tt.deepEqual(hexToHsl('#fff'), [0, 0, 100]);\n});\ntest('converts grey shorthand uppercase', t => {\n\tt.deepEqual(hexToHsl('#aaa'), [0, 0, 67]);\n});\n"]}