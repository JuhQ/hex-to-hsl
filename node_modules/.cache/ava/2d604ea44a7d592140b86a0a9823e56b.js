'use strict';

var _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { return { powerAssertContext: { value: value, events: this.captured }, source: source }; }; return PowerAssertRecorder; }();

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _index = require('../index');

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _ava2.default)('converts blue', function (t) {
	var _rec = new _powerAssertRecorder(),
	    _rec2 = new _powerAssertRecorder();

	t.deepEqual(_rec._expr(_rec._capt((0, _index2.default)('#0593FF'), 'arguments/0'), {
		content: 't.deepEqual(hexToHsl(\'#0593FF\'), [206, 100, 51])',
		filepath: 'test/colors.js',
		line: 5
	}), _rec2._expr(_rec2._capt([206, 100, 51], 'arguments/1'), {
		content: 't.deepEqual(hexToHsl(\'#0593FF\'), [206, 100, 51])',
		filepath: 'test/colors.js',
		line: 5
	}));
});

(0, _ava2.default)('converts green', function (t) {
	var _rec3 = new _powerAssertRecorder(),
	    _rec4 = new _powerAssertRecorder();

	t.deepEqual(_rec3._expr(_rec3._capt((0, _index2.default)('#00C176'), 'arguments/0'), {
		content: 't.deepEqual(hexToHsl(\'#00C176\'), [157, 100, 38])',
		filepath: 'test/colors.js',
		line: 9
	}), _rec4._expr(_rec4._capt([157, 100, 38], 'arguments/1'), {
		content: 't.deepEqual(hexToHsl(\'#00C176\'), [157, 100, 38])',
		filepath: 'test/colors.js',
		line: 9
	}));
});

(0, _ava2.default)('converts orange', function (t) {
	var _rec5 = new _powerAssertRecorder(),
	    _rec6 = new _powerAssertRecorder();

	t.deepEqual(_rec5._expr(_rec5._capt((0, _index2.default)('#FF8A00'), 'arguments/0'), {
		content: 't.deepEqual(hexToHsl(\'#FF8A00\'), [33, 100, 50])',
		filepath: 'test/colors.js',
		line: 13
	}), _rec6._expr(_rec6._capt([33, 100, 50], 'arguments/1'), {
		content: 't.deepEqual(hexToHsl(\'#FF8A00\'), [33, 100, 50])',
		filepath: 'test/colors.js',
		line: 13
	}));
});

(0, _ava2.default)('converts purple', function (t) {
	var _rec7 = new _powerAssertRecorder(),
	    _rec8 = new _powerAssertRecorder();

	t.deepEqual(_rec7._expr(_rec7._capt((0, _index2.default)('#A900C7'), 'arguments/0'), {
		content: 't.deepEqual(hexToHsl(\'#A900C7\'), [291, 100, 40])',
		filepath: 'test/colors.js',
		line: 17
	}), _rec8._expr(_rec8._capt([291, 100, 40], 'arguments/1'), {
		content: 't.deepEqual(hexToHsl(\'#A900C7\'), [291, 100, 40])',
		filepath: 'test/colors.js',
		line: 17
	}));
});

(0, _ava2.default)('converts red', function (t) {
	var _rec9 = new _powerAssertRecorder(),
	    _rec10 = new _powerAssertRecorder();

	t.deepEqual(_rec9._expr(_rec9._capt((0, _index2.default)('#FF003C'), 'arguments/0'), {
		content: 't.deepEqual(hexToHsl(\'#FF003C\'), [346, 100, 50])',
		filepath: 'test/colors.js',
		line: 21
	}), _rec10._expr(_rec10._capt([346, 100, 50], 'arguments/1'), {
		content: 't.deepEqual(hexToHsl(\'#FF003C\'), [346, 100, 50])',
		filepath: 'test/colors.js',
		line: 21
	}));
});
//# sourceMappingURL=../node_modules/.cache/ava/2d604ea44a7d592140b86a0a9823e56b.js.map